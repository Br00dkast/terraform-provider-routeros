//go:build ignore
// +build ignore

package main

import (
	"log"
	"os"
	"text/template"

	"gopkg.in/yaml.v3"
)

type YamlROS map[string]map[string][]struct {
	TF string
	MT string
}

func main() {
	fileOut, err := os.OpenFile("mikrotik_resource_drift.go", os.O_CREATE|os.O_TRUNC|os.O_WRONLY, 0644)
	if err != nil {
		log.Fatal(err)
	}
	defer fileOut.Close()

	m := YamlROS{}
	fileIn, err := os.Open("mikrotik_resource_drift.yaml")
	if err != nil {
		log.Fatalf("error: %v", err)
	}
	defer fileIn.Close()

	dec := yaml.NewDecoder(fileIn)
	err = dec.Decode(&m)

	driftTemplate.Execute(fileOut, m)
}

var driftTemplate = template.Must(template.New("").Parse(`// Code generated by "tools/drift/main.go"; DO NOT EDIT.
package routeros

func init() {
{{- range $version, $resource := . }}
  {{- range $name, $attributes := $resource }}
    {{- range $attr := $attributes }}
    {{ printf "driftAttributeSlice.Add(%q, %q, %q, %q)" $version $name $attr.TF $attr.MT }}
    {{- end }}
  {{- end }}
{{- end }}
    driftAttributeSlice.SortDesc()
}
`))
